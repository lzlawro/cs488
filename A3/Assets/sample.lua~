require "math"

rootNode = gr.node('root')

red = gr.material({1.0, 0.0, 0.0}, {0.1, 0.1, 0.1}, 10)
darkRed = gr.material({0.1, 0.0, 0.0}, {0.1, 0.1, 0.1}, 10)
blue = gr.material({0.0, 0.0, 1.0}, {0.1, 0.1, 0.1}, 10)
green = gr.material({0.0, 1.0, 0.0}, {0.1, 0.1, 0.1}, 10)
white = gr.material({1.0, 1.0, 1.0}, {0.1, 0.1, 0.1}, 10)
yellow = gr.material({1.0, 1.0, 0.0}, {0.1, 0.1, 0.1}, 10)
black = gr.material({0.0, 0.0, 0.0}, {0.1, 0.1, 0.1}, 10)
white = gr.material({1.0, 1.0, 1.0}, {0.1, 0.1, 0.1}, 10)

sqrtFactor = math.sqrt(2.0) / 2.0

for i = 0, 50, 1
do
    for j = 0, 50, 1
    do
        planeMesh = gr.mesh('plane', 'name-of-plane' .. ' - ' .. tostring(i))
        planeMesh:scale(0.5/5.0, 0.5/5.0, 0.5/5.0)
        planeMesh:rotate('y', 45.0)
        planeMesh:translate(0.0, -0.5, -1.5)
        planeMesh:translate(-(0.5*j)*sqrtFactor*(1.0/5.0), 0, -(0.5*j)*sqrtFactor*(1.0/5.0))
        planeMesh:translate((0.5*i)*sqrtFactor*(1.0/5.0), 0, -(0.5*i)*sqrtFactor*(1.0/5.0))
        -- planeMesh:translate((0.5*i)*math.cos(radianVal), 0, -(0.5*i)*math.sin(radianVal))
        if (i % 2 == 0 and j % 2 == 0) or (i % 2 == 1 and j % 2 == 1) then
            planeMesh:set_material(blue)
        else
            planeMesh:set_material(black)
        end

        rootNode:add_child(planeMesh)
    end
end

return rootNode
